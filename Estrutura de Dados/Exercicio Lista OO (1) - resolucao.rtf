{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 void Lista::inverte()\
\{\
    int n = numeroDeElementos();\
    for (int i = n; i >= 1; i--)\
        insere(umElemento(i), numeroDeElementos()+1);\
    for (int i = 1; i <= n; i++)\
        retira(1);\
\}\
\
void Lista::insereOrdenado (int elemento)\
\{\
    if (ehVazia())\
        insere(elemento, 1);\
    else\
    \{\
        int posicao = 1;\
        while (posicao <= numeroDeElementos() && elemento > umElemento(posicao))\
            posicao++;\
        insere(elemento, posicao);\
    \}\
\}\
\
void Lista::todasAsPosicoes(int elemento, Lista &listaPosicoes) \{\
\
    for (int i = 1; i <= numeroDeElementos(); i++)\
        if (umElemento(i) == elemento)\
            listaPosicoes.insere(i, listaPosicoes.numeroDeElementos() + 1);\
\}\
\
void Lista::desmembra (int elemento, Lista &L1, Lista &L2)\
\{\
    Nodo* nodo = this->inicio;\
\
    while (nodo->pegaElemento() != elemento)\
    \{\
        L1.insere(nodo->pegaElemento(), L1.numeroDeElementos() + 1);\
        nodo = nodo->pegaProximo();\
    \}\
\
    nodo = nodo->pegaProximo();\
    while (nodo != NULL)\
    \{\
        L2.insere(nodo->pegaElemento(), L2.numeroDeElementos() + 1);\
        nodo = nodo->pegaProximo();\
    \}\
\}\
}